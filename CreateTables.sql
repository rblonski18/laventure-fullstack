DROP DATABASE IF EXISTS CSCI201FinalProject;
CREATE DATABASE CSCI201FinalProject;
USE CSCI201FinalProject;

CREATE TABLE Activities (
	ActivityID INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    Username VARCHAR(30) NOT NULL,
    Title VARCHAR(50) NOT NULL,
    Image MEDIUMBLOB NOT NULL,
    Description VARCHAR(350) NOT NULL,
    Longitude DOUBLE NOT NULL,
    Latitude DOUBLE NOT NULL,
    Town VarChar(256) NOT NULL,
    Rating DOUBLE NOT NULL,
    RatingCount INT NOT NULL,
    RSVPCount INT NOT NULL,
    MaxRSVPs INT NOT NULL,
    Adventure BOOLEAN NOT NULL,
	Beach BOOLEAN NOT NULL,
	Books BOOLEAN NOT NULL,
	Entertainment BOOLEAN NOT NULL,
	Exercise BOOLEAN NOT NULL,
	Games BOOLEAN NOT NULL,
	Music BOOLEAN NOT NULL,
	NightLife BOOLEAN NOT NULL,
	Outdoors BOOLEAN NOT NULL,
	Relax BOOLEAN NOT NULL,
	Shopping BOOLEAN NOT NULL,
	Sports BOOLEAN NOT NULL,
    Time VARCHAR(20) NOT NULL);


CREATE TABLE Users (
	UserID INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    Email VARCHAR(50) NOT NULL,
    Name VARCHAR(50) NOT NULL,
    Username VARCHAR(30) NOT NULL,
    Password VARCHAR(64),
    FacebookUser BOOLEAN NOT NULL,
    ActivityID1 INT,
    ActivityID2 INT,
    ActivityID3 INT,
    ActivityID4 INT,
    ActivityID5 INT,
    FOREIGN KEY fk1(ActivityID1) REFERENCES Activities(ActivityID),
    FOREIGN KEY fk2(ActivityID2) REFERENCES Activities(ActivityID),
    FOREIGN KEY fk3(ActivityID3) REFERENCES Activities(ActivityID),
    FOREIGN KEY fk4(ActivityID4) REFERENCES Activities(ActivityID),
    FOREIGN KEY fk5(ActivityID5) REFERENCES Activities(ActivityID));

CREATE TABLE RSVPs (
	RSVPID INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    ActivityID INT NOT NULL,
    UserID INT NOT NULL,
    QueuePos INT NOT NULL,
    FOREIGN KEY fk1(ActivityID) REFERENCES Activities(ActivityID),
    FOREIGN KEY fk2(UserID) REFERENCES Users(UserID));

CREATE TABLE Reviews (
	ReviewNum INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    ActivityID INT NOT NULL,
    UserID INT NOT NULL,
    RatingVal DOUBLE NOT NULL,
    ReviewText VARCHAR(350) NOT NULL,
    FOREIGN KEY fk1(ActivityID) REFERENCES Activities(ActivityID),
    FOREIGN KEY fk2(UserID) REFERENCES Users(UserID));